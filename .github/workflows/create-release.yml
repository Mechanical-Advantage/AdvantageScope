name: Create Release

on:
  release:
    types: [published]

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install Node.js dependencies
        run: npm ci
      - name: Check formatting
        run: npm run check-format

  build:
    strategy:
      matrix:
        platform:
          - {
              displayName: "macOS",
              os: macos-latest,
              shortName: "mac",
              buildArg: "-m",
              artifactExt: "dmg",
              artifactType: "application/octet-stream"
            }
          - {
              displayName: "Windows",
              os: windows-latest,
              shortName: "win",
              buildArg: "-w",
              artifactExt: "exe",
              artifactType: "application/octet-stream"
            }
          - {
              displayName: "Linux/deb",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l deb",
              artifactExt: "deb",
              artifactType: "application/octet-stream"
            }
          - {
              displayName: "Linux/snap",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l snap",
              artifactExt: "snap",
              artifactType: "application/octet-stream"
            }
          - {
              displayName: "Linux/AppImage",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l AppImage",
              artifactExt: "AppImage",
              artifactType: "application/octet-stream"
            }
        arch: ["x64", "arm64"]
        exclude:
          - arch: arm64
            platform:
              {
                displayName: "Linux/snap",
                os: ubuntu-latest,
                shortName: "linux",
                artifactExt: "snap",
                artifactType: "application/octet-stream"
              }

    name: Build for ${{ matrix.platform.displayName }} (${{ matrix.arch }})
    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get release info
        id: get_release_info
        uses: kaliber5/action-get-release@v1
        with:
          token: ${{ github.token }}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install Node.js dependencies
        run: npm ci
      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libarchive-tools snapcraft
      - name: Prepare macOS certificate
        if: matrix.platform.os == 'macos-latest'
        run: |
          echo "CSC_LINK=${{ secrets.MACOS_CERTIFICATE }}" >> $GITHUB_ENV
          echo "CSC_KEY_PASSWORD=${{ secrets.MACOS_CERTIFICATE_PWD }}" >> $GITHUB_ENV
          echo "APPLE_ID=${{ secrets.MACOS_APPLE_ID }}" >> $GITHUB_ENV
          echo "APPLE_ID_PWD=${{ secrets.MACOS_APPLE_ID_PWD }}" >> $GITHUB_ENV
          echo "APPLE_ID_TEAM=${{ secrets.MACOS_APPLE_ID_TEAM }}" >> $GITHUB_ENV
      - name: Build app
        run: npm run build -- --${{ matrix.arch }} ${{ matrix.platform.buildArg }} --publish never
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Prepare macOS artifact
        if: matrix.platform.os == 'macos-latest'
        run: |
          mv dist/AdvantageScope-*.dmg artifact
      - name: Prepare Linux artifact
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          mv dist/*.${{ matrix.platform.artifactExt }} artifact
      - name: Prepare Windows artifact
        if: matrix.platform.os == 'windows-latest'
        run: |
          Move-Item -Path "dist\AdvantageScope*.exe" -Destination "artifact"
      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: artifact
          asset_name: advantagescope-${{ matrix.platform.shortName }}-${{ matrix.arch }}-${{ steps.get_release_info.outputs.tag_name }}.${{ matrix.platform.artifactExt }}
          asset_content_type: ${{ matrix.platform.artifactType }}
