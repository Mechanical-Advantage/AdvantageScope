name: Build

on:
  push:
  pull_request:

jobs:
  compile:
    name: Check & Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install Node.js dependencies
        run: npm ci
        env:
          ASCOPE_NO_FFMPEG: true
      - name: Check formatting
        run: npm run check-format
      - name: Compile bundles
        run: npm run compile
      - name: Upload bundles
        uses: actions/upload-artifact@v3
        with:
          name: bundles
          path: bundles/*.js

  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { displayName: "macOS", os: macos-latest, shortName: "mac", buildArg: "-m", artifactExt: "dmg" }
          - { displayName: "Windows", os: windows-latest, shortName: "win", buildArg: "-w", artifactExt: "exe" }
          - {
              displayName: "Linux/AppImage",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l AppImage",
              artifactExt: "AppImage"
            }
          - {
              displayName: "Linux/snap",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l snap",
              artifactExt: "snap"
            }
          - {
              displayName: "Linux/flatpak",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l flatpak",
              artifactExt: "flatpak"
            }
          - { displayName: "Linux/deb", os: ubuntu-latest, shortName: "linux", buildArg: "-l deb", artifactExt: "deb" }
          - { displayName: "Linux/rpm", os: ubuntu-latest, shortName: "linux", buildArg: "-l rpm", artifactExt: "rpm" }
          - {
              displayName: "Linux/pacman",
              os: ubuntu-latest,
              shortName: "linux",
              buildArg: "-l pacman",
              artifactExt: "pacman"
            }

        arch:
          [
            { electron: "x64", flatpak: "x86_64" },
            { electron: "arm64", flatpak: "aarch64" },
            { electron: "armv7l", flatpak: "" }
          ]
        exclude:
          - arch: { electron: "armv7l", flatpak: "" }
            platform: { displayName: "macOS", os: macos-latest, shortName: "mac", buildArg: "-m", artifactExt: "dmg" }
          - arch: { electron: "armv7l", flatpak: "" }
            platform:
              { displayName: "Windows", os: windows-latest, shortName: "win", buildArg: "-w", artifactExt: "exe" }
          - arch: { electron: "arm64", flatpak: "aarch64" }
            platform:
              {
                displayName: "Linux/snap",
                os: ubuntu-latest,
                shortName: "linux",
                buildArg: "-l snap",
                artifactExt: "snap"
              }
          - arch: { electron: "armv7l", flatpak: "" }
            platform:
              {
                displayName: "Linux/flatpak",
                os: ubuntu-latest,
                shortName: "linux",
                buildArg: "-l flatpak",
                artifactExt: "flatpak"
              }

    name: Build for ${{ matrix.platform.displayName }} (${{ matrix.arch.electron }})
    needs: compile
    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install Node.js dependencies
        run: npm ci
      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update; sudo apt-get install --no-install-recommends -y libarchive-tools snapcraft
      - name: Install Linux dependencies (flatpak)
        if: matrix.platform.artifactExt == 'flatpak'
        run: |
          sudo apt-get install flatpak flatpak-builder
          sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install flathub org.freedesktop.Platform/${{ matrix.arch.flatpak }}/22.08 --assumeyes
          sudo flatpak install flathub org.freedesktop.Sdk/${{ matrix.arch.flatpak }}/22.08 --assumeyes
          sudo flatpak install flathub org.electronjs.Electron2.BaseApp/${{ matrix.arch.flatpak }}/22.08 --assumeyes
      - name: Load macOS certificate
        if: matrix.platform.os == 'macos-latest' && github.event_name != 'pull_request'
        run: |
          echo "CSC_LINK=${{ secrets.MACOS_CERTIFICATE }}" >> $GITHUB_ENV
          echo "CSC_KEY_PASSWORD=${{ secrets.MACOS_CERTIFICATE_PWD }}" >> $GITHUB_ENV
      - name: Download bundles
        uses: actions/download-artifact@v3
        with:
          name: bundles
          path: bundles
      - name: Build app
        run: npx electron-builder build --${{ matrix.arch.electron }} ${{ matrix.platform.buildArg }} --publish never
        env:
          NODE_OPTIONS: --max-old-space-size=4096
          DEBUG: "@malept/flatpak-bundler"
      - name: Prepare macOS artifact
        if: matrix.platform.os == 'macos-latest'
        run: |
          mv dist/AdvantageScope-*.dmg advantagescope-${{ matrix.platform.shortName }}-${{ matrix.arch.electron }}-dev.${{ matrix.platform.artifactExt }}
      - name: Prepare Linux artifact
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          mv dist/*.${{ matrix.platform.artifactExt }} advantagescope-${{ matrix.platform.shortName }}-${{ matrix.arch.electron }}-dev.${{ matrix.platform.artifactExt }}
      - name: Prepare Windows artifact
        if: matrix.platform.os == 'windows-latest'
        run: |
          Move-Item -Path "dist\AdvantageScope*.exe" -Destination "advantagescope-${{ matrix.platform.shortName }}-${{ matrix.arch.electron }}-dev.${{ matrix.platform.artifactExt }}"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: advantagescope-${{ matrix.platform.shortName }}-${{ matrix.arch.electron }}-dev.${{ matrix.platform.artifactExt }}
          path: advantagescope-${{ matrix.platform.shortName }}-${{ matrix.arch.electron }}-dev.${{ matrix.platform.artifactExt }}
