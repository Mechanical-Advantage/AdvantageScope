name: Build

on:
  push:
  pull_request:

jobs:
  format:
    name: Check Formatting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install Node.js dependencies
        run: npm ci
      - name: Check formatting
        run: npm run check-format

  build:
    strategy:
      matrix:
        arch: ["x64", "arm64"]
        platform:
          - mac: { displayName: "macOS", os: macos-latest, shortName: "mac", artifactExt: "dmg" }
          - win: { displayName: "Windows", os: windows-latest, shortName: "win", artifactExt: "exe" }
          - linux-deb: { displayName: "Linux/deb", os: ubuntu-latest, shortName: "linux", artifactExt: "deb" }
          - linux-snap: { displayName: "Linux/snap", os: ubuntu-latest, shortName: "linux", artifactExt: "snap" }
          - linux-AppImage:
              { displayName: "Linux/AppImage", os: ubuntu-latest, shortName: "linux", artifactExt: "AppImage" }
        exclude:
          - arch: arm64
            platform: linux-snap

    name: Build for ${{ matrix.platform.displayName }} (${{ matrix.arch }})
    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install Node.js dependencies
        run: npm ci
      - name: Install Linux dependencies
        if: matrix.platform.os == 'ubuntu-latest'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends -y libarchive-tools snapcraft
      - name: Prepare macOS certificate
        if: matrix.platform.os == 'macos-latest' && github.event_name == 'push'
        run: |
          echo "CSC_LINK=${{ secrets.MACOS_CERTIFICATE }}" >> $GITHUB_ENV
          echo "CSC_KEY_PASSWORD=${{ secrets.MACOS_CERTIFICATE_PWD }}" >> $GITHUB_ENV
      - name: Build app
        run: npm run build -- --${{ matrix.arch }} --publish never
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Prepare macOS artifact
        if: matrix.platform.os == 'macos-latest'
        run: |
          mv dist/AdvantageScope-*.dmg artifact
      - name: Prepare Linux artifact
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          mv dist/*.${{ matrix.platform.artifactExt }} artifact
      - name: Prepare Windows artifact
        if: matrix.platform.os == 'windows-latest'
        run: |
          Move-Item -Path "dist\AdvantageScope Setup *.exe" -Destination "artifact"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: advantagescope-${{ matrix.platform.shortname }}-${{ matrix.arch }}-dev.${{ matrix.platform.artifactExt }}
          path: "artifact"
